Parameter cWhere
If isdigit(alltrim(cWhere))
	cWhere = val(alltrim(cWhere))
ENDIF

Create cursor kontoandmik_report1 (id int, konto c(20), alg_saldo n(12,2), deebet n(12,2), kreedit n(12,2), lopp_saldo n(12,2),;
	db_kokku n(14,2), kr_kokku n(14,2),;
	kpv d, nimetus c(120), asutus c(120), dok c(120), korr_konto c(20), ;
	kood1 c(20) null, kood2 c(20) null, kood3 c(20) null, kood4 c(20) null, kood5 c(20) null, tunnus c(20) null, proj c(20) null)
Index on Konto tag Konto
Set order to Konto

SELECT * from comKontodRemote WHERE kood LIKE ALLTRIM(fltrAruanne.konto) + '%' ORDER BY kood INTO CURSOR qryKontod

TEXT TO lcWhere TEXTMERGE noshow	
	tunnus ilike '%<<fltrAruanne.tunnus>>%'
ENDTEXT

IF EMPTY(fltrAruanne.kond)
	TEXT TO lcWhere ADDITIVE TEXTMERGE noshow
		and rekv_id  = <<gRekv>>
	ENDTEXT
	
ENDIF

SET STEP on

SELECT qryKontod
SCAN
		lError = oDb.readFromModel('aruanned\raamatupidamine\kontoandmik', 'kontoandmik_report', 'alltrim(qryKontod.kood), fltrAruanne.kpv1,fltrAruanne.kpv2, gRekv', 'tmpReport', lcWhere)	
		IF !lError
			MESSAGEBOX('Viga',0+16, 'Kontoandmik')
			SET STEP ON 
			exit
		ENDIF	
*!*			SELECT tmpReport
*!*			scan	
		Insert into kontoandmik_report1 (id, konto, nimetus, korr_konto, alg_saldo, deebet, kreedit, lopp_saldo,;
			db_kokku, kr_kokku,;
			kpv, asutus, dok, kood1, kood2, kood3, kood4, kood5, proj, tunnus);
			SELECT tmpReport.number, qryKontod.kood, tmpReport.nimetus, tmpReport.konto, tmpReport.alg_saldo,;
				tmpReport.deebet, tmpReport.kreedit, tmpReport.lopp_saldo, ;
				tmpReport.db_kokku, tmpReport.kr_kokku, tmpReport.kpv,;
				tmpReport.asutus, tmpReport.dok, tmpReport.kood1, tmpReport.kood2, tmpReport.kood3,;
				tmpReport.kood4, tmpReport.kood5, tmpReport.proj, tmpReport.tunnus;
				FROM tmpReport	
*		ENDSCAN
			
ENDSCAN
IF !lError
	SELECT 0
	RETURN .f.
ENDIF

SELECT kontoandmik_report1



*!*	* lisatud 22/05
*!*	IF USED ('curSaldo')
*!*		USE IN curSaldo
*!*	ENDIF

*!*	Local lnDeebet, lnKreedit
*!*	tcAllikas = '%'
*!*	tcArtikkel = '%'
*!*	tcTegev = '%'
*!*	tcObjekt = '%'
*!*	tcEelAllikas = '%'
*!*	lnDeebet = 0
*!*	lnKreedit = 0
*!*	tcTpD = '%'
*!*	tcTpK = '%'
*!*	tcMuud = '%'
*!*	tckasutaja = '%'

*!*	dKpv1 = iif(!empty(fltrAruanne.kpv1), fltrAruanne.kpv1,date(year(date()),month(date()),1))
*!*	dKpv2 = iif(!empty(fltrAruanne.kpv2), fltrAruanne.kpv2,date())
*!*	Replace fltrAruanne.kpv1 with dKpv1,;
*!*		fltrAruanne.kpv2 with dKpv2 in fltrAruanne
*!*	dKpv = date(year(fltrAruanne.kpv1), month(fltrAruanne.kpv1),1)
*!*	cKonto = ALLTRIM(fltrAruanne.konto)
*!*	Create cursor kontoandmik_report (id int, korkonto c(120), pKonto c(20), deebet n(12,2), kreedit n(12,2),;
*!*		kpv d, nimetus c(120), asutus c(120), dok c(120), konto c(20), dbkokku n(12,2), krKokku n(12,2), algs n(1) default 1,;
*!*		fin c(20), tulu c(20), kulu c(20), tegev c(20), allikas c(20))
*!*	Index on pKonto tag pKonto
*!*	Set order to pKonto
*!*	nAasta = year (dKpv)
*!*	nKuu = month (dKpv)
*!*	With odb
*!*	&&	.use('reportOper1','cursor1')
*!*		Select comKontodRemote
*!*		Index on kood tag kood
*!*		Set order to kood
*!*		Scan for comKontodRemote.kood = iif (!empty (fltrAruanne.konto),fltrAruanne.konto,comKontodRemote.kood) and ;
*!*				!empty (comKontodRemote.kood)
*!*			If empty (fltrAruanne.konto)
*!*				If !used('v_kontoaruanne')
*!*					.use('v_kontoaruanne')
*!*				Endif
*!*				Select v_kontoaruanne
*!*				Locate for alltrim(kood) = left(alltrim(comKontodRemote.kood),len(alltrim(v_kontoaruanne.kood)))
*!*				If !found()
*!*					Loop
*!*				Endif
*!*			Endif
*!*			cKonto = comKontodRemote.kood
*!*			.use('v_saldo','cursorAlgSaldo',.t.)
*!*			lError = .exec ("sp_saldo ",str (grekv)+","+ str(nKuu,2)+","+str (nAasta,4)+",'"+cKonto+"%'",'qrySaldo' )
*!*			Select qrySaldo
*!*			Locate for konto = cKonto
*!*			Select cursorAlgSaldo
*!*			Append blank
*!*			Replace saldo with qrySaldo.deebet - qrySaldo.kreedit in cursorAlgSaldo
*!*			cDeebet = '%'
*!*			cKreedit = '%%'
*!*			cAsutus = '%%'
*!*			cDok = '%%'
*!*			cSelg = '%%'
*!*			tcproj = '%'
*!*			tcUritus = '%'

*!*			nSumma1 = -99999999
*!*			nSumma2 = 999999999
*!*			If dKpv1 > dKpv
*!*				ldKpv1 = dKpv1
*!*				ldKpv2 = dKpv2
*!*				dKpv1 = dKpv
*!*				dKpv2 = ldkpv1
*!*				.use('curJournal','queryAlg')
*!*				select queryAlg
*!*				Sum summa for kpv >= dKpv and kpv < ldKpv1 and alltrim(deebet) = alltrim(cKonto) to lnDeebet	
*!*				Sum summa for kpv >= dKpv and kpv < ldKpv1 and alltrim(kreedit) = alltrim(cKonto) to lnKreedit	
*!*				use in queryAlg
*!*				dKpv1 = ldKpv1
*!*				dKpv2 = ldKpv2
*!*			else
*!*				lnDeebet = 0
*!*				lnKreedit = 0
*!*			endif		
*!*			cDeebet = alltrim(cKonto)+'%'
*!*			.use('curJournal','queryDb')
*!*			cDeebet = '%'
*!*			cKreedit = alltrim(cKonto)+'%'
*!*			.use('curJournal','queryKr')
*!*			Insert into kontoandmik_report (pKonto, deebet, kreedit, kpv, nimetus, algs);
*!*				values (cKonto, cursorAlgSaldo.saldo + lnDeebet - lnKreedit, 0, dKpv1, 'Alg.saldo', 1)
*!*			Use in cursorAlgSaldo

*!*			Select number as id, kpv,asutus,lausend as nimetus,cKonto as pKonto,;
*!*				iif(deebet = cKonto,kreedit,deebet) as konto,;
*!*				iif(deebet = cKonto,summa,000000000.00) as 'deebet',;
*!*				iif(kreedit = cKonto,summa,000000000.00) as 'Kreedit', 0 as algs, dok,;
*!*				objekt as fin, allikas as tulu, artikkel as kulu, tegev, eelallikas as allikas;
*!*				from queryDb;
*!*				into cursor query1
*!*			If reccount ('query1') > 0
*!*				Select kontoandmik_report
*!*				Append from dbf('query1')
*!*			Endif
*!*			Select number as id, kpv,asutus,lausend as nimetus,cKonto as pKonto,;
*!*				iif(deebet = cKonto,kreedit,deebet) as konto,;
*!*				iif(deebet = cKonto,summa,000000000.00) as 'deebet',;
*!*				iif(kreedit = cKonto,summa,000000000.00) as 'Kreedit', 0 as algs, dok,;
*!*				objekt as fin, allikas as tulu, artikkel as kulu, tegev, eelallikas as allikas;			
*!*				from queryKr;
*!*				into cursor query1
*!*			If reccount ('query1') > 0
*!*				Select kontoandmik_report
*!*				Append from dbf('query1')
*!*			Endif
*!*			Use in query1
*!*			Select sum(deebet)  as dbkokku , sum (kreedit) krKokku from kontoandmik_report ;
*!*				where  nimetus <> 'Alg.saldo' ;
*!*				and pKonto = cKonto;
*!*				into cursor qry1
*!*			Update kontoandmik_report set dbkokku = qry1.dbkokku, krKokku = qry1.krKokku where pKonto = cKonto
*!*			Use in qry1
*!*		Endscan
*!*		If empty (fltrAruanne.konto)
*!*			Select pKonto from kontoandmik_report;
*!*				where (!empty (deebet) and algs = 0) ;
*!*				or (!empty (kreedit) and algs = 0);
*!*				into cursor qryprelAruanne

*!*			Select id, korkonto, deebet, kreedit, pKonto, kpv, nimetus, konto, dbkokku, krKokku;
*!*				from kontoandmik_report;
*!*				where !empty (pKonto);
*!*				and (!empty (deebet) or !empty (kreedit));
*!*				and pKonto in (select pKonto from qryprelAruanne);
*!*				order by pKonto, kpv, konto;
*!*				group by pKonto, kpv, konto;
*!*				into cursor kontoandmik_report1
*!*			Use in qryprelAruanne
*!*		Else
*!*			Select * from kontoandmik_report where !empty (pKonto) and;
*!*				(!empty (deebet) or !empty (kreedit));
*!*				order by pKonto, kpv, konto;
*!*				into cursor kontoandmik_report1
*!*		Endif
*!*		Use in kontoandmik_report
*!*	Endwith

*!*	Select kontoandmik_report1
