Parameter tcWhere
* TSD 2015 lisa 1
*SET STEP ON
Local lcString, l_parent, l_sm
l_sm = 0

ltest = .T.

If (ltest)

	tdKpv1 = Date(2018,10,01)
	tdKpv2 = Date(2018,10,31)
	l_parent = 0
	gRekv = 63
	guserid = 2477
	tnId = 0
	gdKpv = Date()

	gcProgNimi = 'EELARVE'

	Set Classlib To classes\Classlib
	gVersia = 'PG'
	oDb = Createobject('db')

* palk_oper, rekvid = 63
	l_dokprop = 1716

* test_server
	gnHandle = SQLConnect('test_server', 'vlad','Vlad490710')
*	gnHandle = SQLConnect('localPg', 'vlad','123')
	gnHandleAsync = gnHandle

	If gnHandle < 0
		Messagebox('Connection error',0+48,'Error')
		Return .T.
	Endif
	tdKpv = Date()
* Vlad Gordin, rekvid = 63
	tnIsikid = 29518
	tnKond = 1

	If !Used('qryRekv')
		lError = oDb.readFromModel('ou\rekv', 'row', 'gRekv, guserid', 'qryRekv')

	Endif
	Set Step On

Else
	tdKpv1 = fltrAruanne.kpv1
	tdKpv2 = fltrAruanne.kpv2
	l_parent = Iif(Empty(fltrAruanne.kond),999999,gRekv)
	tnKond = Iif(!Empty(fltrAruanne.kond),Null,1)


Endif

Create Cursor v_mvt(isikukood c(11), Summa N(14,4), mvt N(14,4), tm N(14,4), tki N(14,4), pm N(14,4), tululiik c(2))
Index On isikukood Tag kood
Set Order To kood

Create Cursor tsd_report (isikukood c(20), nimi c(254), v1020 c(20), v1030 N(14,2) Null , v1040 N(14,2) Null,;
	v1050 c(100), v1060 N(14,2) Null , v1070 N(14,2) Null , v1080 N(14,2) Null, v1090 N(14,2) Null , ;
	v1100 N(14,2) Null, v1110 N(14,2) Null ,	v1120 N(14,2) Null , v1130 N(14,2) Null , v1140 N(14,2) Null , ;
	v1150 c(20),	v1160 N(14,2) Null , v1160_610 N(14,2) Null, v1160_620 N(14,2) Null, v1160_630 N(14,2) Null, v1160_640 N(14,2) Null,;
	v1170 N(14,2) Null , v1200 N(14,2) Null , v1210 N(14,2) Null, v1220 N(14,2) Null ,;
	v1230 N(14,2) Null , v1240 N(14,2) Null , v1250 N(14,2) Null )



*!*	TEXT TO lcWhere TEXTMERGE noshow
*!*		rekv_id = <<gRekv>>
*!*		and konto ilike '<<ALLTRIM(fltrAruanne.konto)>>%'
*!*	ENDTEXT
lError = oDb.readFromModel('aruanned\palk\tsd_lisa1', 'tsd_lisa1', 'tdKpv1,tdKpv2, gRekv,tnKond', 'tmpReport')
If !lError
	Messagebox('Viga',0+16, 'TSD')
	Set Step On
	Select 0
	Return .F.
Endif


* calender days
lnPaevadKuus = Day(Gomonth(Date(Year(tdKpv2), Month(tdKpv2), 1)  ,1) - 1)


l_last_isikukood = ''

Select isikukood, isik, Sum(Summa) As Summa, Sum(puhkused) As puhkused, Sum(haigused) As haigused, Sum(tm) As tm, Sum(sm) As sm, Sum(tki) As tki, Sum(tka) As tka,;
	sum(pm) As pm, Sum(tulubaas) As tulubaas, tululiik, '' as riik, sm_arv, tk_arv, ;
	max(v1040) As v1040, Sum(puhkus) As puhkus, Max(lopp) As lopp, Max(tmpReport.arv_min_sots) As arv_min_sots, ;
	max(tmpReport.min_sots_alus) As min_sots_alus;
	FROM tmpReport ;
	WHERE (!Isnull(tmpReport.tululiik) And  tmpReport.tululiik <> '') ;
	GROUP By isikukood, isik, tululiik, riik, sm_arv, tk_arv ;
	ORDER By isikukood, tululiik;
	INTO Cursor curTSD
Select curTSD

Scan
* 1090


	If l_last_isikukood <> curTSD.isikukood
		l_last_isikukood = curTSD.isikukood
		l_used_1090 = .F.
		l_used_mvt = .F.

	Endif

	l_sm = curTSD.sm
	Select Sum(tmpReport.sm) As sm, Max(minsots)As minsots, Max(minpalk) As minpalk, Sum(tmpReport.Summa) As Summa, ;
		sum((tmpReport.Summa - tmpReport.puhkused - tmpReport.haigused) * tmpReport.sm_arv) As sm_alus_summa, Max(lopp) As lopp ;
		From tmpReport ;
		Where isikukood = curTSD.isikukood ;
		 Into Cursor tmpMaksud


	l_1090 = 0
	If !Isnull(curTSD.arv_min_sots) And l_used_1090 = .F.
		l_1090 = curTSD.min_sots_alus
		l_sm = curTSD.sm + curTSD.arv_min_sots
		l_used_1090 = .T.
	Endif

* Veerg 1040 täidetakse ainult koodidega 10, 11, 12 ja 13 väljamakse juuhul. Meie struktuuris kasutatakse enamasti 10 kood. Väljamaksetel koodidega 16, 17, 24, 33 jne veerg 1040 ei täideta. Näiteks Narva Kultuurimaja Rugodiv Turaeva Liudmila ik 47001043728 – kaks väljamakse koodi 10 ja 24. Mõlemal koodil on täidetud veerg 1040.
	ln_tululiik = Val(Alltrim(curTSD.tululiik))

	l_v1040 = Iif(curTSD.v1040 > 1, 1, Round(curTSD.v1040,2))
	If ln_tululiik > 13
*			curTSD.v1040 = 0
		l_v1040 = 0
	Endif


	l_mvt = 0
* mvt
	lcAlias = Alias()
	If  l_used_mvt = .F.
		l_mvt = calcMVT(curTSD.isikukood)
		l_used_mvt  = .T.
	Endif

	Select v_mvt
	Locate For Alltrim(isikukood) =  Alltrim(curTSD.isikukood) And Alltrim(tululiik) = Alltrim(curTSD.tululiik)
	l_mvt = v_mvt.mvt
	l_tm = v_mvt.tm

	Select (lcAlias)


* 1200, 1210, 1220
	Select Sum((curTSD.Summa) *  curTSD.sm_arv) As Summa, Sum(tmpReport.sm) As sm, Sum(tmpReport.tm) As tm, Sum(tmpReport.tki) As tki, ;
		sum(tmpReport.tka) As tka, Sum(tmpReport.pm) As pm ;
		FROM tmpReport ;
		Where tmpReport.liik = 1 And isikukood = curTSD.isikukood Into Cursor tmpMaksud

	Insert Into tsd_report (isikukood, nimi, v1020, v1030, v1040, v1050, v1060, v1070, v1080, v1090, ;
		v1100, v1110, v1120, v1130, v1140, v1150, v1160, ;
		v1160_610, v1160_620, v1160_630,v1160_640,	;
		v1170 ,v1200, v1210, v1220, v1230, v1240, v1250 ) ;
		values (curTSD.isikukood, curTSD.isik, curTSD.tululiik, (curTSD.Summa) , l_v1040, '',;
		(curTSD.Summa) * curTSD.sm_arv, 0,0, l_1090,;
		l_sm, curTSD.pm,(curTSD.Summa) * curTSD.tk_arv,curTSD.tki, curTSD.tka, ;
		'610', l_mvt, l_mvt,0,0,0, ;
		l_tm, tmpMaksud.Summa, tmpMaksud.sm, tmpMaksud.pm, tmpMaksud.tki, tmpMaksud.tka, l_tm)

Endscan

* koormus mitte rohkem kui 1
Update tsd_report Set v1040 = 1 Where v1040 > 1

* lisame isikud, kellel arvestused puuduvad, aga koormus on
Select * From tmpReport Where isikukood Not In ;
	(Select Distinct isikukood From tsd_report ;
	WHERE (!Empty(v1040) Or ;
	v1020 In ('10','17'))) ;
	INTO Cursor qryKoormusLisa

Select qryKoormusLisa
Scan
	Insert Into tsd_report (isikukood, nimi, v1020, v1040, v1090, v1100) ;
		VALUES (qryKoormusLisa.isikukood,  qryKoormusLisa.isik,'10',qryKoormusLisa.v1040, qryKoormusLisa.min_sots_alus,qryKoormusLisa.arv_min_sots )
Endscan


If Used('tmpReport')
	Use In tmpReport
Endif

If Used('qryKoormusLisa')
	Use In qryKoormusLisa
Endif

Select tsd_report

If (ltest)
	=SQLDISCONNECT(gnHandle)
Endif


Function calcMVT
	Lparameters tcIsikukood
	Local l_found_miinus, lMVT, l_miinus_tululiik, l_miinus_mvt
	lMVT = 0
	l_found_miinus = .F.
	l_miinus_tululiik = ''
	l_miinus_mvt = 0

	lcAlias = Alias()
	Select tululiik, Sum(curTSD.Summa) As Summa, Sum(curTSD.tulubaas) As mvt, Sum(curTSD.tm) As tm, Sum(curTSD.pm) As pm, Sum(curTSD.tki) As tki ;
		From curTSD Where curTSD.isikukood = tcIsikukood Group By tululiik Into Cursor tmp
	If Used('tmp') And Reccount('tmp') > 0
		lMVT = tmp.mvt
	Endif

	If Used('v_mvt')
		Select tmp
		Scan
			If (tmp.mvt < 0)
				l_found_miinus = .T.
			Endif

			Insert Into v_mvt (isikukood, Summa, mvt, tm, pm, tki, tululiik) Values (tcIsikukood, tmp.Summa, tmp.mvt, tmp.tm, tmp.pm, tmp.tki, tmp.tululiik)
		Endscan
		If (l_found_miinus)
* parandame
			Do While l_found_miinus
				l_found_miinus = updateMiinusMVT(tcIsikukood)
			Enddo

		Endif

	Endif
	Use In tmp
	Select(lcAlias)
	Return lMVT
Endfunc


Function updateMiinusMVT
	Lparameters tcIsikukood
	If !Used('v_mvt')
		Return .F.
	Endif

	Select tululiik, Summa As Summa,  Min(mvt) As mvt, (tm) As tm, (tki) As tki, (pm) As pm From v_mvt ;
		WHERE Alltrim(isikukood) = Alltrim(tcIsikukood) And mvt < 0 Group By tululiik, tm, Summa, tki, pm Into Cursor t_mvt_min

	Select tululiik, (Summa) As Summa, (pm) As pm, (tki) As tki,  Max(mvt) As mvt, tm From v_mvt ;
		WHERE Alltrim(isikukood) = Alltrim(tcIsikukood) And mvt > 0 Group By tululiik, tm, Summa, tki, pm Into Cursor t_mvt_max
	If Reccount('t_mvt_min') =0 Or Reccount('t_mvt_max') = 0
		Return .F.
	Endif
* nullime miinus
	l_tm = calc_tm(t_mvt_min.Summa, 0, t_mvt_min.tki, t_mvt_min.pm)

	Update v_mvt Set mvt = 0, tm = l_tm Where Alltrim(isikukood) = Alltrim(tcIsikukood) And Alltrim(tululiik) = Alltrim(t_mvt_min.tululiik)
* parandame pluus
* arvestame tm
	l_tm = calc_tm(t_mvt_max.Summa, (t_mvt_max.mvt + t_mvt_min.mvt), t_mvt_max.tki, t_mvt_max.pm)
	Update v_mvt Set mvt = (t_mvt_max.mvt + t_mvt_min.mvt), tm = l_tm Where Alltrim(isikukood) = Alltrim(tcIsikukood) And Alltrim(tululiik) = Alltrim(t_mvt_max.tululiik)

	Use In t_mvt_max
	Use In t_mvt_min
	Select 	v_mvt
	Return .T.

Endfunc


Function calc_tm
	Lparameters tnSumma, tnMvt, tnTki, tnPm
	Local l_tm
	l_tm = 0

	l_tm = Round((tnSumma - tnMvt - tnTki - tnPm) * 0.20,2)
	Return l_tm
Endfunc
