Lparameters tnId
Local lError
Set Textmerge On


If !Empty(tnId)
	If !Used('curArved')
		l_where = "id = " + Str(tnId)
		lError = oDb.readFromModel('raamatupidamine\arv', 'curArved', 'gRekv, guserid', 'curArved',l_where)
	Endif

	Select a.*,;
		IIF(a.liik = 0,Iif(!Isnull(qryRekv.muud),qryRekv.muud,qryRekv.nimetus), Alltrim(a.asutus) + ' ' + Alltrim(a.omvorm))  As muuja,;
		IIF(a.liik = 1 ,Iif(!Isnull(qryRekv.muud),qryRekv.muud,qryRekv.nimetus),Alltrim(a.asutus) + ' ' + Alltrim(a.omvorm)) As ostja,;
		IIF(a.liik = 0, qryRekv.regkood,Alltrim(a.regkood)) As muuja_regkood,;
		IIF(a.liik = 1, qryRekv.regkood,Alltrim(a.regkood)) As ostja_regkood;
		from curArved a;
		WHERE a.Id = tnId ;
		INTO Cursor qryeArved

Else
	If Used('curArved')
		Select a.*,;
			IIF(a.liik = 0,Iif(!Isnull(qryRekv.muud),qryRekv.muud,qryRekv.nimetus), Alltrim(a.asutus) + ' ' + Alltrim(a.omvorm))  As muuja,;
			IIF(a.liik = 1 ,Iif(!Isnull(qryRekv.muud),qryRekv.muud,qryRekv.nimetus),Alltrim(a.asutus) + ' ' + Alltrim(a.omvorm)) As ostja,;
			IIF(a.liik = 0, qryRekv.regkood,Alltrim(a.regkood)) As muuja_regkood,;
			IIF(a.liik = 1, qryRekv.regkood,Alltrim(a.regkood)) As ostja_regkood;
			from curArved a;
			WHERE !EMPTY(valitud);
			INTO Cursor qryeArved
	Endif

Endif

cFail = 'c:\temp\buh60\EDOK\earved.xml'
cFailbak = 'c:\temp\buh60\EDOK\'+Alltrim(Str(grekv))+'earved'+Sys(2015)+'.bak'

If !Directory(Justpath(cFail))
	Mkdir(Justpath(cFail))
Endif

If File (cFailbak)
	Erase (cFailbak)
Endif
If File(cFail)
	Rename (cFail) To (cFailbak)
Endif

=execute()

If !File(cFail)
	cFail = ''
Endif

Return cFail


Function execute
	Local laAddress[3]

	lcKpv = Str(Year(Date()),4) + '-'+;
		IIF(Month(Date())<10,'0','') + Alltrim(Str(Month(Date()),2))+'-'+;
		IIF(Day(Date())<10,'0','')+Alltrim(Str(Day(Date()),2))


TEXT TO lcFileString NOSHOW
<?xml version="1.0" encoding="UTF-8"?>
	<E_Invoice>
		<Header>
			<Date><<lcKpv>></Date>
			<FileId>1</FileId>
			<AppId>EARVE</AppId>
			<Version>1.1</Version>
		</Header>

ENDTEXT

	Select qryeArved
	Scan

		lcKpv = Str(Year(qryeArved.kpv),4) + '-'+;
			IIF(Month(qryeArved.kpv)<10,'0','') + Alltrim(Str(Month(qryeArved.kpv),2))+'-'+;
			IIF(Day(qryeArved.kpv)<10,'0','')+Alltrim(Str(Day(qryeArved.kpv),2))

		lcTKpv = ''
		If !Empty(qryeArved.tahtaeg)
			lcTKpv = Str(Year(qryeArved.tahtaeg),4) + '-'+;
				IIF(Month(qryeArved.tahtaeg)<10,'0','') + Alltrim(Str(Month(qryeArved.tahtaeg),2))+'-'+;
				IIF(Day(qryeArved.tahtaeg)<10,'0','')+Alltrim(Str(Day(qryeArved.tahtaeg),2))
		Endif
		laAddress = getAddress(qryeArved.aadress)
		lcCity = getAddress(qryeArved.aadress, 3)
		lcPost = getAddress(qryeArved.aadress, 1)


TEXT TO lcFileString ADDITIVE NOSHOW

			<Invoice invoiceId="<<convert_to_utf(ALLTRIM(qryeArved.Number))>>" regNumber="<<Alltrim(qryeArved.regkood)>>">
				<InvoiceParties>
					<SellerParty>
						<Name><<Alltrim(convert_to_utf(qryeArved.muuja))>></Name>
						<RegNumber><<Alltrim(qryeArved.muuja_regkood)>></RegNumber>
					</SellerParty>
					<BuyerParty>
						<Name><<Alltrim(convert_to_utf(qryeArved.ostja))>></Name>
						<RegNumber><<Alltrim(qryeArved.ostja_regkood)>></RegNumber>
						<ContactData>
							<E-mailAddress><<Alltrim(convert_to_utf(qryeArved.email))>></E-mailAddress>
							<LegalAddress>
								<PostalAddress1><<Alltrim(convert_to_utf(lcPost))>></PostalAddress1>
								<City><<ALLTRIM(convert_to_utf(lcCity))>></City>
							</LegalAddress>
						</ContactData>
					</BuyerParty>
				</InvoiceParties>
				<InvoiceInformation>
					<Type type="DEB"/>
					<DocumentName>Arve</DocumentName>
					<InvoiceNumber><<Alltrim(convert_to_utf(qryeArved.Number))>></InvoiceNumber>
					<InvoiceDate><<lcKpv>></InvoiceDate>
				</InvoiceInformation>
				<InvoiceSumGroup>
					<InvoiceSum><<Alltrim(Str(qryeArved.Summa,14,2))>></InvoiceSum>
					<VAT>
ENDTEXT
		tnId = qryeArved.Id
		lError = oDb.readFromModel('raamatupidamine\arv', 'details', 'tnId, guserid', 'tmpeArveDet')
		SELECT tmpeArveDet

		Select km As vatRate,;
			sum(kbm) As vatSum,  Sum(Summa) As Summa ;
			from tmpeArveDet ;
			group By km;
			INTO Cursor qryeArvedVat

		SELECT km As vatRate, ;
			kbm As vat_summa,;
			alltrim(nimetus) + ' ' + Alltrim(Iif(Isnull(muud),'',muud)) As Description, uhik As ItemUnit,;
			kogus As ItemAmount, hind As ItemPrice, (Summa - kbm) As ItemSum, kbm As vatSum, Summa As ItemTotal;
			from tmpeArveDet ;
			into Cursor qryeArvedDet

		If Used('qryeArvedDet')
			lcFileString= lcFileString  + create_details()
		Endif

TEXT TO lcFileString ADDITIVE NOSHOW

		</InvoiceItemGroup>
	</InvoiceItem>
	<AdditionalInformation>
		<InformationName>Lisa</InformationName>
		<InformationContent><<Alltrim(convert_to_utf(qryeArved.lisa))>></InformationContent>

ENDTEXT


		If Type('qryeArved.muud') <> 'U' And !Empty(qryeArved.muud)
TEXT TO lcFileString ADDITIVE NOSHOW
			<InformationName>Muud</InformationName>
			<InformationContent><<convert_to_utf(ALLTRIM(qryeArved.muud))>></InformationContent>
ENDTEXT

		Endif

TEXT TO lcFileString ADDITIVE NOSHOW
		</AdditionalInformation>
		<PaymentInfo>
			<Currency>EUR</Currency>
			<PaymentRefId><<qryeArved.viitenr>></PaymentRefId>
			<PaymentDescription>Arve <<convert_to_utf(qryeArved.Number)>></PaymentDescription>
			<Payable>YES</Payable>
			<PayDueDate><<lcTKpv>></PayDueDate>
			<PaymentTotalSum><<Alltrim(Str(qryeArved.Summa,14,2))>></PaymentTotalSum>
			<PayerName><<Alltrim(convert_to_utf(qryeArved.ostja)) >></PayerName>
			<PaymentId><<ALLTRIM(convert_to_utf(qryeArved.number))>></PaymentId>
			<PayToAccount><<ALLTRIM(qryeArved.aa)>></PayToAccount>
			<PayToName><<ALLTRIM(convert_to_utf(qryeArved.muuja))>></PayToName>
		</PaymentInfo>
		</Invoice>

ENDTEXT

	Endscan
	Select qryeArved
	Sum Summa To lnTotalSumma


TEXT TO lcFileString ADDITIVE NOSHOW

			<Footer>
				<TotalNumberInvoices><<Alltrim(Str(Reccount('qryeArved')))>></TotalNumberInvoices>
				<TotalAmount><<Alltrim(Str(lnTotalSumma,14,2))>></TotalAmount>
			</Footer>
		</E_Invoice>
ENDTEXT


	Strtofile(lcFileString, cFail, 4)
	Return File(cFail)
Endfunc

Function create_details
	Local lcString, lnSummaKokku, lcIsoKpv, lcPankIban, lcTKpv, lcKpv
	lcString = ''

* koguneme kaibemaksu summad

	Select qryeArvedVat
	Scan
TEXT TO lcString ADDITIVE NOSHOW

				<SumBeforeVAT><<Alltrim(Str(qryeArvedVat.summa - qryeArvedVat.vatSum, 14,2))>></SumBeforeVAT>
				<VATRate><<Alltrim((qryeArvedVat.vatRate))>></VATRate>
				<VATSum><<Alltrim(Str(qryeArvedVat.vatSum,14,2))>></VATSum>
				<Currency>EUR</Currency>
				<SumAfterVAT><<Alltrim(Str(qryeArvedVat.summa,14,2))>></SumAfterVAT>
ENDTEXT

	Endscan
TEXT TO lcString ADDITIVE NOSHOW

			</VAT>
			<TotalSum><<Alltrim(Str(qryeArved.Summa,14,2))>></TotalSum>
			<Currency>EUR</Currency>
		</InvoiceSumGroup>
		<InvoiceItem>
			<InvoiceItemGroup>

ENDTEXT

	Select qryeArvedDet
	Scan
TEXT TO lcString ADDITIVE NOSHOW

			<ItemEntry>
				<Description><<Alltrim(convert_to_utf(qryeArvedDet.Description))>></Description>
				<ItemDetailInfo>
					<ItemUnit><<Alltrim(qryeArvedDet.ItemUnit)>></ItemUnit>
					<ItemAmount><<Alltrim(Str(qryeArvedDet.ItemAmount,14,4))>></ItemAmount>
					<ItemPrice><<Alltrim(Str(qryeArvedDet.itemPrice,14,2))>></ItemPrice>
				</ItemDetailInfo>
				<ItemSum><<Alltrim(Str(qryeArvedDet.itemSum,14,2))>></ItemSum>
				<VAT>
					<SumBeforeVAT><<Alltrim(Str(qryeArvedDet.ItemSum, 14,2))>></SumBeforeVAT>
					<VATRate><<Alltrim((qryeArvedDet.vatRate))>></VATRate>
					<VATSum><<Alltrim(Str(qryeArvedDet.vatSum,14,2))>></VATSum>
					<Currency>EUR</Currency>
				</VAT>
				<ItemTotal><<Alltrim(Str(qryeArvedDet.itemTotal,14,2))>></ItemTotal>
			</ItemEntry>
ENDTEXT

	Endscan

	Return lcString
Endfunc


Function getAddress(tcAadress, Index)

	Local lcString, laAddress[10], returnAadress[3], lcIndex, lcLinn
	lcIndex = ''
	lcLinn = ''

	Select qryCities

	nRows = Alines(laAddress, Strtran(tcAadress,",",Chr(13)))

	For i = 1 To nRows
		If Len(Alltrim(laAddress[i]))  = 5 And Isdigit(Alltrim(laAddress[i]))
			lcIndex = laAddress[i]
		Endif

		Select nimetus From qryCities Where Upper(Alltrim(nimetus)) = Upper(Alltrim(laAddress[i])) Into Cursor qryTmp

		If Reccount('qryTmp') > 0
			lcLinn = laAddress[i]
		Endif
		Use In qryTmp
	Endfor

	lcPost = ''
	For i = 1 To nRows
		If Alltrim(laAddress[i]) <> Alltrim(lcIndex) And Alltrim(Upper(laAddress[i])) <> Alltrim(Upper(lcLinn))
			lcPost = lcPost + Iif(i > 1, ', ','') + laAddress[i]
		Endif
	Endfor

	If Empty(lcLinn)
		lcLinn = laAddress[nRows]
	Endif

	returnAadress[1] = lcPost
	returnAadress[2] = lcIndex
	returnAadress[3] = lcLinn

	If Empty(Index)
		Index = 1
	Endif

	Return returnAadress[index]
Endfunc
